{"/home/travis/build/npmtest/node-npmtest-ascii-art/test.js":"/* istanbul instrument in package npmtest_ascii_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ascii-art/lib.npmtest_ascii_art.js":"/* istanbul instrument in package npmtest_ascii_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ascii_art = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ascii_art = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ascii-art/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ascii-art && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ascii_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ascii_art\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ascii_art.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ascii_art.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ascii_art.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ascii_art.__dirname + '/lib.npmtest_ascii_art.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/ascii-art.js":"(function (root, factory) { // UMD - returnExports\n    if (typeof define === 'function' && define.amd) {\n        define([\n            './image',\n            './table',\n            './figlet',\n            './ansi',\n            'browser-request',\n            'dirname-shim'\n        ], function(img, tbl, fig, ansi, request, shim){\n            return factory(function(){\n                return img;\n            },function(){\n                return tbl;\n            },function(){\n                return fig;\n            },function(){\n                return ansi;\n            }, {\n                readFile : function(filename, cs, fn){\n                    var cb = typeof cs === 'string'?fn:cs;\n                    request({\n                        url: __dirname +'/'+filename\n                    }, function(err, req, data){\n                        if(err) return cb(err);\n                        else cb(undefined, data);\n                    })\n                }\n            }, request);\n        });\n    } else if (typeof module === 'object' && module.exports) {\n\n        module.exports = factory(function(){\n            return require('./image');\n        },function(){\n            return require('./table');\n        },function(){\n            return require('./figlet');\n        },function(){\n            return require('./ansi');\n        }, require('fs'), require('request'));\n\n    } else {\n        root.AsciiArt = factory(function(){\n            return root.AsciiArtImage;\n        }, function(){\n            return root.AsciiArtTable;\n        }, function(){\n            return root.AsciiArtFiglet;\n        }, function(){\n            return root.AsciiArtAnsi;\n        }, root.fs);\n    }\n}(this, function(getImage, getTable, getFiglet, getAnsi, fs, request) {\n    var get ={\n        Image : getImage,\n        Table : getTable,\n        Figlet : getFiglet,\n        Ansi : getAnsi\n    };\n    var AsciiArt = {\n        value : 'variant1',\n        valueScales : {\n            solid : '█'.split(''),\n            variant1 : ' .,:;i1tfLCG08@'.split(''),\n            variant2 : '@%#*+=-:. '.split('').reverse(),\n            variant3 : '#¥¥®®ØØ$$ø0oo°++=-,.    '.split('').reverse(),\n            variant4 : '#WMBRXVYIti+=;:,. '.split('').reverse(),\n            'ultra-wide' : ('MMMMMMM@@@@@@@WWWWWWWWWBBBBBBBB000000008888888ZZZZZZZZZaZaaaaaa2222222SSS'\n                +'SSSSXXXXXXXXXXX7777777rrrrrrr;;;;;;;;iiiiiiiii:::::::,:,,,,,,.........    ').split('').reverse(),\n            wide : '@@@@@@@######MMMBBHHHAAAA&&GGhh9933XXX222255SSSiiiissssrrrrrrr;;;;;;;;:::::::,,,,,,,........        '.split(''),\n            hatching : '##XXxxx+++===---;;,,...    '.split('').reverse(),\n            bits : '# '.split('').reverse(),\n            binary : '01 '.split('').reverse(),\n            greyscale : ' ▤▦▩█'.split(''),\n            blocks : ' ▖▚▜█'.split('')\n        },\n        color : ' CGO08@'.split(''),\n        font : 'courier new',\n        fontPath : 'fonts/',\n        invert : false,\n        alpha : false,\n        errorMode : 'console',\n    };\n\n    //lazy load subreferences\n    function proxyOnFirstReference(name){\n        Object.defineProperty(AsciiArt, name, {\n            get: function() {\n                result = get[name]()[name];\n                result.setInstance(AsciiArt);\n                AsciiArt[name] = result;\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n    }\n    proxyOnFirstReference('Figlet');\n    proxyOnFirstReference('Image');\n    proxyOnFirstReference('Table');\n    proxyOnFirstReference('Ansi');\n\n\n    var getTextFile = function(file, cb){\n        var parts = (file ||'').split('/')\n        if(!parts.filter(function(p){ return p.trim() }).length){\n            throw new Error('incomplete path provided!');\n        }\n\n        switch(parts[0]){\n            case 'textfiles.com':\n                if(parts[1]){\n                    var pre = '';\n                    var post = '';\n                    switch(parts[1]){\n                        case 'NFOS':\n                            post = 'asciiart/';\n                        case 'asciiart':\n                            pre = 'artscene.';\n                            break;\n                        case 'LOGOS':\n                        case 'DECUS':\n                            post = 'art/';\n                            break;\n                        case 'RAZOR':\n                        case 'FAIRLIGHT':\n                        case 'DREAMTEAM':\n                        case 'HUMBLE':\n                        case 'HYBRID':\n                        case 'PRESTIGE':\n                        case 'INC':\n                        case 'TDUJAM':\n                        case 'ANSI':\n                            post = 'piracy/';\n                            break;\n                    }\n                    request(\n                        'http://'+pre+'textfiles.com/'+post+parts[1]+'/'+parts[2],\n                        function(err, res, body){\n                            var data = body ||\n                                (\n                                    res && res.request &&\n                                    res.request.responseContent &&\n                                    res.request.responseContent.body\n                                ) || undefined;\n                            cb(undefined, data);\n                        }\n                    );\n                break;\n            }\n            //default : throw new Error('unknown art source:'+parts[0]);\n        }\n    }\n\n    //todo: optional styling on font callback\n    var combine = function(blockOne, blockTwo, style){\n        var linesOne = blockOne.split(\"\\n\");\n        var linesTwo = blockTwo.split(\"\\n\");\n        var diff = Math.max(linesOne.length - linesTwo.length, 0);\n        linesOne.forEach(function(line, index){\n            if(index >= diff){\n                if(style){\n                    linesOne[index] = linesOne[index]+AsciiArt.Ansi.Codes(linesTwo[index-diff], style, true);\n                }else{\n                    linesOne[index] = linesOne[index]+linesTwo[index-diff];\n                }\n            }\n        });\n        return linesOne.join(\"\\n\");\n    };\n    var safeCombine = function(oldText, newText, style){\n        return combine(\n            oldText||\n                (new Array(newText.split(\"\\n\").length)).join(\"\\n\"),\n            newText,\n            style\n        );\n    }\n    var fontChain = function(){\n        var cb;\n        var chain = [];\n        var result;\n        var ob = this;\n        var done = function(){\n            ob.working = false;\n            check();\n        }\n        var check = function(){\n            if(ob.working) return;\n            else ob.working = true;\n            if(result && cb && chain.length === 0){\n                check = function(){};\n                cb(result);\n            }\n            //todo: refactor this rat's nest into a mode switch\n            var item;\n            var mode;\n            if(chain.length){\n                 item = chain.shift();\n                 if(item.options) item = item.options;\n                 if(typeof item == 'string'){\n                     mode = 'join';\n                 }else{\n                     if(item.artwork){\n                         mode = 'artwork';\n                     }else{\n                         if(item.start !== undefined || item.stop ){\n                             mode = 'lines';\n                         }else{\n                             if(item.x !== undefined &&\n                                 item.y !== undefined\n                             ){\n                                 mode = 'overlay';\n                             }else{\n                                 if(item.font){\n                                     mode = 'font';\n                                 }else{\n                                     if(item.data){\n                                         mode = 'table';\n                                     }else{\n                                         mode = 'image';\n                                     }\n                                 }\n                             }\n                         }\n                     }\n                 }\n             }\n             switch(mode){\n                 case 'join':\n                     setTimeout(function(){\n                         result = safeCombine(result, item);\n                         done();\n                     }, 1);\n                    break;\n                 case 'artwork':\n                     getTextFile(item.artwork, function(err, artwork){\n                         result = safeCombine(result, artwork);\n                         done();\n                     });\n                    break;\n                 case 'lines':\n                     setTimeout(function(){\n                         result = (\n                             result.split(\"\\n\").slice( item.start || 0, item.stop)\n                         ).join(\"\\n\");\n                         done();\n                     }, 1);\n                    break;\n                 case 'overlay':\n                     setTimeout(function(){\n                         var overlaid = AsciiArt.Ansi.intersect(\n                             result, item.text, item\n                         );\n                         if(overlaid) result = overlaid;\n                         done();\n                     }, 1);\n                    break;\n                 case 'font':\n                     AsciiArt.Figlet.write(item.text, item.font, function(text){\n                         result = safeCombine(result, text, item.style);\n                         done();\n                     });\n                     break;\n                 case 'table':\n                     setTimeout(function(){\n                         var opts = {};\n                         [\n                             'intersection', 'horizontalBar', 'verticalBar',\n                             'dataStyle', 'headerStyle', 'bars', 'cellStyle',\n                             'borderColor'\n                         ].forEach(function(opt){\n                             opts[opt] = item[opt];\n                         })\n                         var table = new AsciiArt.Table(opts);\n                         var fields = item.columns ||\n                            Object.keys(item.data[0]||{});\n                         table.setHeading.apply(table, fields);\n                         table.data = item.data;\n                         var res = table.write(\n                             item.width ||\n                             (\n                                 process &&\n                                 process.stdout &&\n                                 process.stdout.columns\n                             ) || 80\n                         );\n                         result = safeCombine(result, res);\n                         done();\n                     }, 1);\n                    break;\n                 case 'image':\n                    var image = new AsciiArt.Image(item);\n                     image.write(function(err, text){\n                         if(!err) result = safeCombine(result, text);\n                         done();\n                     });\n                    break;\n             }\n        }\n        this.font = function(str, fontName, style, callback){\n            if(typeof style == 'function'){\n                callback = style;\n                style = undefined;\n            }\n            if(callback) cb = callback;\n            chain.push({\n                font : fontName,\n                text : str,\n                style : style\n            });\n            check();\n            return ob;\n        };\n        this.artwork = function(artwork, callback){\n            if(callback) cb = callback;\n            chain.push({\n                artwork : artwork,\n            });\n            check();\n            return ob;\n        }\n        this.lines = function(start, stop, callback){\n            var opts = { start : start };\n            if(typeof stop == 'function'){\n                cb = stop;\n            }else{\n                if(callback) cb = callback;\n                opts.stop = stop;\n            }\n            chain.push(opts);\n            check();\n            return ob;\n        }\n        this.image = function(options, callback){\n            if(callback) cb = callback;\n            chain.push({\n                options : options,\n            });\n            check();\n            return ob;\n        };\n        this.table = function(options, callback){\n            if(callback) cb = callback;\n            chain.push(options);\n            check();\n            return ob;\n        };\n        this.join = function(text, callback){\n            if(callback) cb = callback;\n            chain.push(text);\n            check();\n            return ob;\n        };\n        this.overlay = function(text, options, callback){\n            if(typeof options == 'function'){\n                callback = options;\n                options = {x:0, y:0};\n            }\n            if(callback) cb = callback;\n            chain.push({\n                options : {\n                    x: options.x ||0,\n                    y: options.y ||0,\n                    style: options.style,\n                    transparent: !!options.transparent,\n                    chroma: typeof options.transparent == 'string'?\n                        options.transparent:undefined,\n                    text: text\n                }\n            });\n            check();\n            return ob;\n        };//*/\n        return this;\n    };\n\n    AsciiArt.font = function(str, fontName, style, callback){\n        if(typeof style == 'function' && !callback){\n            callback = style;\n            style = undefined;\n        }\n        if(!callback){\n            var chain = fontChain.apply({});\n            return chain.font(str, fontName, style);\n        }else{\n            return AsciiArt.Figlet.write(str, fontName, function(text){\n                if(style) text = AsciiArt.Ansi.Codes(text, style, true);\n                callback(text);\n            });\n        }\n    }\n\n    AsciiArt.image = function(options, callback){\n        if(!callback){\n            var chain = fontChain.apply({});\n            return chain.image(options);\n        }else{\n            var image = new AsciiArt.Image(options);\n            image.write(function(err, text){\n                callback(text);\n            });\n        }\n    }\n\n    AsciiArt.artwork = function(options, callback){\n        if(!callback){\n            var chain = fontChain.apply({});\n            return chain.image(options);\n        }else{\n            getTextFile(options.artwork, function(err, artwork){\n                callback(artwork);\n            });\n        }\n    } //*/\n\n    AsciiArt.table = function(options, callback){\n        if(!callback){\n            var chain = fontChain.apply({});\n            return chain.table(options);\n        }else{\n            var opts = {};\n            [\n                'intersection', 'horizontalBar', 'verticalBar',\n                'dataStyle', 'headerStyle', 'bars', 'cellStyle',\n                'borderColor'\n            ].forEach(function(opt){\n                opts[opt] = options[opt];\n            })\n            var table = new AsciiArt.Table(opts);\n            var fields = options.columns || Object.keys(options.data[0] ||{});\n            table.setHeading.apply(table, fields);\n            table.data = options.data;\n            var result = table.write(\n                options.width ||\n                (\n                    process &&\n                    process.stdout &&\n                    process.stdout.columns\n                ) || 80\n            );\n            callback(result);\n        }\n    }\n\n    AsciiArt.strings = function(strs, options, callback){\n        if(typeof options == 'string') options = {font:options};\n        var jobs = 0;\n        var results = [];\n        function checkComplete(){\n            jobs--;\n            if(jobs == 0) callback.apply(callback, results);\n        }\n        strs.forEach(function(str, index){\n            jobs++;\n            AsciiArt.font(str, options.font, options.style, function(rendered){\n                results[index] = rendered;\n                checkComplete();\n            })\n        });\n    }\n\n    AsciiArt.style = AsciiArt.Ansi.Codes;\n\n    //use b in some fashion.\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return AsciiArt;\n}));\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/ansi.js":"(function (root, factory){\n    if(typeof define === 'function' && define.amd){\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    }else if (typeof module === 'object' && module.exports){\n        module.exports = factory();\n    }else{\n        // Browser globals (root is window)\n        root.AsciiArtAnsi = factory();\n    }\n}(this, function(){\n    var AsciiArt = {};\n    var parentArt;\n\n    AsciiArt.Ansi = {\n        length:function(value){\n            var count = 0;\n            AsciiArt.Ansi.map(value, function(row, column, chr, pos, done){\n                count++;\n            });\n            return count;\n        },\n        trimTo :function(value, length){\n            var lcv = 0;\n            var result = '';\n            var inEscape = false;\n            var fuse = length;\n            while(lcv < value.length){\n                if(inEscape){\n                    //todo: strict (enforce numeric)\n                    result += value[lcv];\n                    if(value[lcv] == 'm'){\n                        inEscape = false;\n                    }\n                }else{\n                    if(value[lcv] == '\\033' && value[lcv+1] == '['){\n                        inEscape = true;\n                        result += '\\033[';\n                        lcv++;\n                    }else{\n                        if(fuse > 0){\n                            result += value[lcv];\n                            fuse--;\n                        }\n                    }\n                }\n                lcv++;\n            }\n            return result;\n        },\n        charAt :function(str, index, includePrefix){\n            var result;\n            var previousCharPos;\n            AsciiArt.Ansi.map(str, function(row, column, chr, pos, done){\n                if(index == column){\n                    if(includePrefix && previousCharPos !== undefined){\n                        var prefix = background.substring(previousCharPos, pos-1);\n                        result = prefix+chr;\n                    }else result = chr;\n                    return done();\n                }\n                previousCharPos = pos;\n            });\n            return result;\n        },\n        intersect :function(background, overlay, options){\n            var x = options.x || 0;\n            var y = options.y || 0;\n            var lines = overlay.split(\"\\n\");\n            var bgLines = background.split(\"\\n\");\n            //var lineWidth =AsciiArt.ansi.length()\n            //console.log('$$$', bgLines[0].length, lines[0].length, y)\n            if(y < 0) y = (bgLines.length - lines.length) + y+1;\n            if(x < 0) x = (AsciiArt.Ansi.length(bgLines[0]) - AsciiArt.Ansi.length(lines[0])) + x+1;\n            var str = AsciiArt.Ansi.map(background, function(row, column, chr, pos, done){\n                //if(options.y < 0) y = (bgLines[0].length - lines[row-y].length) + options.y;\n                //short circuit\n                if(row > y + lines.length-1) return done();\n                if(\n                    //y in-range\n                    row >= y &&\n                    //x in-range\n                    column >= x &&\n                    column <= x + lines[row-y].length\n                ){\n                    if(lines[row-y][column-x-1] === undefined) return;\n                    if(options.transparent && lines[row-y][column-x-1] === ' ') return;\n                    if(options.style) return AsciiArt.style(\n                        AsciiArt.Ansi.charAt(lines[row-y], column-x)\n                    , options.style);\n                    else return AsciiArt.Ansi.charAt(lines[row-y], column-x)\n                }\n            });\n            if(options.chroma){\n                str = str.replace(new RegExp(options.chroma, 'g'), ' ');\n            }\n            return str;\n        },\n        map :function(value, handler){\n            var lcv = 0;\n            var result = '';\n            var inEscape = false;\n            var lines = value.split(\"\\n\");\n            var shortcircuit = false;\n            for(var lineNumber=0; lineNumber < lines.length; lineNumber++){\n                if(shortcircuit) continue;\n                var line = lines[lineNumber];\n                var pos = 0;\n                for(var lcv=0; lcv < line.length; lcv++){\n                    if(shortcircuit) continue;\n                    if(inEscape){\n                        if(line[lcv] == 'm'){\n                            inEscape = false;\n                        }\n                    }else{\n                        if(line[lcv] == '\\033' && line[lcv+1] == '['){\n                            inEscape = true;\n                            lcv++;\n                            continue;\n                        }\n                        pos++;\n                        var value = handler(lineNumber, pos, line[lcv], lcv, function(){\n                            shortcircuit = true;\n                        });\n                        if(value != undefined){\n                            //increment by the length of all the extra chars attached to this value\n                            var a = line.substring(0, lcv-1)+value+line.substring(lcv+1);\n                            lcv += value.length-2;\n                            line = a;\n                        }\n                    }\n                }\n                lines[lineNumber] = line;\n            }\n            return lines.join(\"\\n\");\n        }\n    }\n\n    var codes = {\n        \"off\"       : '\\033[0m',\n        \"reset\"     : '\\033[0m',\n        \"bold\"      : '\\033[1m',\n        \"italic\"    : '\\033[3m',\n        \"underline\" : '\\033[4m',\n        \"framed\"    : '\\033[51m',\n        \"encircled\" : '\\033[52m',\n        \"overline\"  : '\\033[53m',\n        \"blink\"     : '\\033[5m',\n        \"inverse\"   : '\\033[7m',\n        \"hidden\"    : '\\033[8m',\n        \"black\"     : '\\033[30m',\n        \"red\"       : '\\033[31m',\n        \"green\"     : '\\033[32m',\n        \"yellow\"    : '\\033[33m',\n        \"blue\"      : '\\033[34m',\n        \"magenta\"   : '\\033[35m',\n        \"cyan\"      : '\\033[36m',\n        \"white\"      : '\\033[37m',\n        \"gray\"      : '\\033[90m',\n        \"bright_black\": '\\033[90m',\n        \"bright_red\"  : '\\033[91m',\n        \"bright_green\": '\\033[92m',\n        \"bright_yellow\": '\\033[93m',\n        \"bright_blue\" : '\\033[94m',\n        \"bright_magenta\": '\\033[95m',\n        \"bright_cyan\" : '\\033[96m',\n        \"bright_white\": '\\033[97m',\n        \"black_bg\"  : '\\033[40m',\n        \"red_bg\"    : '\\033[41m',\n        \"green_bg\"  : '\\033[42m',\n        \"yellow_bg\" : '\\033[43m',\n        \"blue_bg\"   : '\\033[44m',\n        \"magenta_bg\": '\\033[45m',\n        \"cyan_bg\"   : '\\033[46m',\n        \"white_bg\"  : '\\033[47m',\n\n        \"gray_bg\"  : '\\033[100m',\n\n        \"bright_black_bg\"  : '\\033[100m',\n        \"bright_red_bg\"    : '\\033[101m',\n        \"bright_green_bg\"  : '\\033[102m',\n        \"bright_yellow_bg\" : '\\033[103m',\n        \"bright_blue_bg\"   : '\\033[104m',\n        \"bright_magenta_bg\": '\\033[105m',\n        \"bright_cyan_bg\"   : '\\033[106m',\n        \"bright_white_bg\"  : '\\033[107m'\n    };\n\n    AsciiArt.Ansi.Codes = function(str, color, forceOff) {\n        if(!color) return str;\n        var color_attrs = color.split(\"+\");\n        var ansi_str = \"\";\n        for(var i=0, attr; attr = color_attrs[i]; i++) {\n            ansi_str += codes[attr];\n        }\n        ansi_str += str;\n        if(forceOff) ansi_str += codes[\"off\"];\n        return ansi_str;\n    };\n\n    //will probably migrate to .codes()\n    AsciiArt.Ansi.codes = AsciiArt.Ansi.Codes;\n\n    AsciiArt.Ansi.setInstance = function(art){\n        parentArt = art;\n    }\n\n    return AsciiArt;\n}));\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/figlet.js":"(function (root, factory){\n    if(typeof define === 'function' && define.amd){\n        // AMD. Register as an anonymous module.\n        define(['browser-request', 'dirname-shim'], function(request, dirname){\n            factory({\n                readFile : function(filename, cs, fn){\n                    var cb = typeof cs === 'string'?fn:cs;\n                    request({\n                        url: __dirname +'/'+filename\n                    }, function(err, req, data){\n                        if(err) return cb(err);\n                        else cb(undefined, data);\n                    })\n                }\n            });\n        });\n    }else if (typeof module === 'object' && module.exports){\n        module.exports = factory(require('fs'));\n    }else{\n        // Browser globals (root is window)\n        root.AsciiArtImage = factory();\n    }\n}(this, function(fs){\n    var AsciiArt = {};\n    var parentArt;\n\n    // this code originates with http://github.com/scottgonzalez/figlet-js\n    // if that ever makes it to NPM, it will become a dependency\n    AsciiArt.Figlet = {\n        fonts: {},\n        fontPath : __dirname+'/Fonts/',\n        parseFont: function(name, fn) {\n            if (AsciiArt.Figlet.fonts[name]) fn(AsciiArt.Figlet.fonts[name]);\n            else AsciiArt.Figlet.loadFont(name, function(defn){\n                AsciiArt.Figlet._parseFont(name, defn, function(font){\n                    AsciiArt.Figlet.fonts[name] = font;\n                    fn(font);\n                });\n            });\n        },\n        _parseFont: function(name, defn, fn) {\n            var lines = defn.split(\"\\n\");\n            var header = lines[0].split(\" \");\n            var hardblank = header[0].charAt(header[0].length - 1);\n            var height = +header[1];\n            var comments = +header[5];\n            var font = {\n                defn: lines.slice(comments + 1),\n                hardblank: hardblank,\n                height: height,\n                char: {}\n            };\n            fn(font);\n        },\n        parseChar: function(char, font) {\n            if(char > 122) return;\n            if (char in font.char) return font.char[char];\n            var height = font.height,\n                start = (char - 32) * height,\n                charDefn = [],\n                i;\n            for (i = 0; i < height; i++) {\n                if(!font.defn[start + i]) return;\n                charDefn[i] = font.defn[start + i].replace(/@/g, \"\")\n                .replace(RegExp(\"\\\\\" + font.hardblank, \"g\"), \" \");\n            }\n            return font.char[char] = charDefn;\n        },\n        loadFont: function(name, fn) {\n            //var fs = require('fs');\n            var fileName = this.fontPath + name+ '.flf';\n            fs.readFile(fileName, 'utf8', function(error, data) {\n                if(error) throw(error);\n                if(data) fn(data);\n            });\n        },\n        preloadDirectory : function(path, callback){\n            //todo\n        },\n        write : function(str, fontName, callback) {\n            AsciiArt.Figlet.parseFont(fontName, function(font){\n                var chars = {},\n                result = \"\";\n                for (var i = 0, len = str.length; i < len; i++) {\n                    chars[i] = AsciiArt.Figlet.parseChar(str.charCodeAt(i), font);\n                }\n                for (var i = 0, height = chars[0].length; i < height; i++) {\n                    for (var j = 0; j < len; j++) {\n                        if(chars[j]) result += chars[j][i];\n                    }\n                    result += \"\\n\";\n                }\n                callback(result, font);\n            });\n        }\n    };\n\n    AsciiArt.Figlet.setInstance = function(art){\n        parentArt = art;\n    }\n\n    return AsciiArt;\n}));\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/image.js":"(function (root, factory) {\n    var imgLoadBrowser = function(url, cb){\n        var img = new root.Image();\n        img.onload = function(){\n            cb(undefined, img)\n        }\n        img.src = url;\n    };\n    var renderersBrowser = function(url, cb){\n        return [ 'average.js' ];\n    };\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['./renderers/average'], function(ave){\n            return factory(imgLoadBrowser, renderersBrowser, function(){\n                return root.document.createElement('canvas');\n            }, root.Image, function(){\n               return ave;\n            });\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        var Canvas = require('canvas');\n        var Image = Canvas.Image;\n        var fs = require('fs');\n        module.exports = factory(function(url, cb){\n            fs.readFile(url, function(err, data){\n                if (err) return cb(err);\n                var image = new Image();\n                image.src = data;\n                cb(undefined, image)\n;            });\n        }, function(){\n            var res = fs.readdirSync(__dirname+'/renderers/average');\n            return res;\n        }, Canvas, Image, function(){ return require('./renderers/average')});\n    } else {\n        // Browser globals (root is window)\n        root.AsciiArtImage = factory(imgLoadBrowser, renderersBrowser, root.Canvas, root.Image);\n    }\n}(this, function (readImage, getRenderers, Canvas, Image, getAverage) {\n    var color_profiles = {\n        \"darwin\" : {\n             \"black\" : [0, 0, 0],\n             \"red\" : [194, 54, 33],\n             \"green\" : [37, 188, 36],\n             \"yellow\" : [173, 173, 39],\n             \"blue\" : [73, 46, 225],\n             \"magenta\": [211, 56, 211],\n             \"cyan\": [51, 187, 200],\n             \"white\": [203, 204, 205],\n             \"bright_black\": [129, 131, 131],\n             \"bright_red\": [252,57,31],\n             \"bright_green\": [49, 231, 34],\n             \"bright_yellow\": [234, 236, 35],\n             \"bright_blue\": [88, 51, 255],\n             \"bright_magenta\": [249, 53, 248],\n             \"bright_cyan\": [20, 240, 240],\n             \"bright_white\": [233, 235, 235]\n        }\n    };\n    var AsciiArt = {};\n    var parentArt;\n    AsciiArt.Image = function(options){\n        if(typeof options == 'string'){\n            if(options.indexOf('://') !== -1){\n                options = {\n                    uri : options\n                }\n            }else{\n                options = {\n                    filepath : options\n                }\n            }\n        }\n        var ob = this;\n        if(!options.alphabet) options.alphabet = 'ultra-wide';\n        options.alphabet = parentArt.valueScales[options.alphabet];\n        this.options = options;\n        if(!this.options.renderer) this.options.renderer = 'average';\n        var jobs = [];\n        this.ready = function(callback){\n            jobs.push(callback);\n        };\n        if(this.uri){\n            throw new Error('uris not yet implemented!')\n            return;\n        }\n        if(this.options.filepath){\n            //todo: handle in UMD wrapper.. pass in assetloader?\n            readImage(this.options.filepath, function(err, image){\n                if (err) throw err;\n                ob.image = image;\n                ob.aspectRatio = ob.image.height/ob.image.width;\n                if(\n                    (!ob.options.width) &&\n                    (!ob.options.height)\n                ){\n                    ob.options.width = 80;\n                }\n                if(ob.options.width){\n                    if(!ob.options.height){\n                        ob.options.height = ob.options.width * ob.aspectRatio;\n                    }\n                }else{\n                    if(ob.options.height){\n                        ob.options.width = ob.options.height / ob.aspectRatio;\n                    }\n                }\n                ob.canvas = new Canvas(ob.image.width, ob.image.height);\n                ob.context = ob.canvas.getContext('2d');\n                ob.context.drawImage(\n                    ob.image, 0, 0, ob.image.width, ob.image.height\n                );\n                ob.ready = function(cb){ if(cb) cb() };\n                jobs.forEach(function(job){\n                    if(job) job();\n                });\n                jobs = [];\n            });\n        }else throw new Error('no filepath provided!');\n    };\n    AsciiArt.Image.Canvas = Canvas;\n    AsciiArt.Image.Image = Image;\n    AsciiArt.Image.prototype.write = function(location, callback){\n        if(typeof location === 'function' && !callback){\n            callback = location;\n            location = undefined;\n        }\n        var ob = this;\n        this.ready(function(){\n            if(location && location.indexOf('://') !== -1){\n                throw new Error(\"uris not yet implemented!\")\n            }else{\n                AsciiArt.Image.renderers[ob.options.renderer].render(\n                    ob,\n                    {\n                        imageFromCanvas : function(canvas){\n                            var newImage = new Image();\n                            if(canvas.toBuffer) newImage.src = canvas.toBuffer();\n                            else newImage.src = canvas.toDataURL();\n                            return newImage;\n                        },\n                        canvas : function(width, height){\n                            var canvas = new Canvas(width, height);\n                            return canvas;\n                        }\n                    },\n                    function(err, text){\n                        if(err) return callback(err);\n                        if(location) require('fs').writeFile(location, text, function(err){\n                            return callback(err, text);\n                        });\n                        else callback(err, text);\n                    }\n                );\n            }\n        });\n    }\n\n    AsciiArt.Image.Color = {};\n    /*AsciiArt.Image.Color.distance = function(r1, g1, b1, r2, g2, b2){\n        return (Math.abs(r1-r2)+Math.abs(g1-g2)+Math.abs(b1-b2))/3;\n    }//*/\n    AsciiArt.Image.Color.distance = function(r1, g1, b1, r2, g2, b2){\n        return (Math.abs(r1-r2)+Math.abs(g1-g2)+Math.abs(b1-b2)+\n            //add the value change in as well\n0\n            //Math.abs(Math.max(r1, g1, b1)-Math.max(r2, g2, b2))/2\n        )/3 + Math.abs(Math.max(r1, g1, b1)-Math.max(r2, g2, b2))/2;\n    }\n    AsciiArt.Image.Colors = function(colorList){\n        this.colors = colorList;\n    };\n    AsciiArt.Image.Color.channels = function(value){\n        //todo: handle, like, any other format\n        //todo: cache?\n        return [\n            parseInt(\"0x\"+value.substring(0,2)),\n            parseInt(\"0x\"+value.substring(2,4)),\n            parseInt(\"0x\"+value.substring(4,6))\n        ];\n    }\n    AsciiArt.Image.Colors.prototype.average = function(callback){\n        var total = ob.colors.map(function(color){\n            return AsciiArt.Image.Color.channels(color);\n        }).reduce(function(a, b){\n            return [a[0]+b[0], a[1]+b[1], a[2]+b[2]];\n        });\n        var result = [\n            Math.floor(total[0]/this.colors.length),\n            Math.floor(total[1]/this.colors.length),\n            Math.floor(total[2]/this.colors.length),\n        ];\n        this.colors = result[0].toString(16)+\n            result[1].toString(16)+\n            result[2].toString(16);\n        if(callback) callback();\n    }\n    AsciiArt.Image.Colors.prototype.reduceTo = function(count, callback){\n        var done = function(){ if(callback) callback() };\n        if(count === 1) this.average(done);\n        else this.shrink({count: this.colors.length - count}, done);\n\n    }\n    AsciiArt.Image.Colors.prototype.shrink = function(options, callback){\n        if(options && options.count){\n            var cache = {};\n            for(var lcv=0; lcv < options.count || 1; lcv++) this.shrink({\n                weights : options.weights,\n                cache : cache\n            });\n            if(callback) callback();\n            return;\n        }\n        if(!options.cache) options.cache = {};\n        //todo: lots of caching\n        var occurances = options.occurances || {};\n        var results = this.colors.map(function(thisColor){\n            var theseChannels = AsciiArt.Image.Color.channels(thisColor);\n            var minimum = ob.colors.map(function(thatColor){\n                if(options.cache[thisColor+thatColor]) return options.cache[thisColor+thatColor];\n                var thoseChannels = AsciiArt.Image.Color.channels(thatColor);\n                var distance = (options.distance || AsciiArt.Image.Color.distance)(\n                    theseChannels.concat(thoseChannels)\n                );\n                var result = {\n                    distance : distance,\n                    color : thatColor\n                }\n                options.cache[thisColor+thatColor] = result;\n                return result;\n            }).reduce(function(a, b){\n                if(a.distance < b.distance) return a;\n                else return b;\n            });\n            return {\n                color : thisColor,\n                other : minimum.color,\n                distance : minimum.distance,\n                occurances : occurances[thisColor]\n            }\n        });\n        var minimumDistance;\n        results.forEach(function(result){\n            if( (!minimumDistance) || result.minimumDistance < minimumDistance){\n                minimumDistance = result.minimumDistance;\n            }\n        });\n        var result = results.filter(function(result){\n            result.distance == minimumDistance;\n        }).reduce(function(a, b){\n            return a.occurances > b.occurances?b:a;\n        });\n        var position = this.colors.indexOf(result.color);\n        if(position === -1) throw new Error('could not find color');\n        this.colors.splice(position, 1);\n    }\n\n    var closest = function(color, colors, names, options){\n        var distances = colors.map(function(candidate){\n            return (options.distance || AsciiArt.Image.Color.distance)(\n                color[0], color[1], color[2],\n                candidate[0], candidate[1], candidate[2]\n            );\n        });\n        var position;\n        var distance;\n        distances.forEach(function(thisDistance, pos){\n            if( (!distance) || distance > thisDistance ){\n                distance = thisDistance;\n                position = pos;\n            }\n        });\n        return names?names[position]:colors[position];\n    };\n\n    AsciiArt.Image.getTerminalColor = function(r, g, b, options){\n        var names = Object.keys(AsciiArt.Image.colorProfiles.darwin);\n        var colors = names.map(function(name){\n            return AsciiArt.Image.colorProfiles.darwin[name];\n        });\n        return closest([r, g, b], colors, names, options);\n    }\n\n    AsciiArt.Image.renderers = {};\n    AsciiArt.Image.renderers['average'] = getAverage();\n    //todo: make dynamic load async\n    /*var dir = getRenderers();\n    dir.forEach(function(file){\n        var name = file.substring(0, file.indexOf('.'));\n        AsciiArt.Image.renderers[name] = require(__dirname+'/renderers/'+file);\n    });*/\n\n    AsciiArt.Image.setInstance = function(art){\n        Object.keys(AsciiArt.Image.renderers).forEach(function(name){\n            AsciiArt.Image.renderers[name].setInstance(art);\n        });\n        parentArt = art;\n    }\n    AsciiArt.Image.colorProfiles = color_profiles;\n    //todo: AsciiArt.Image.renderers.foregroundBackground\n    //      sample down to two colors by subsample grid, sample posistions\n    //      compare two-color layout to a full ASCII character map for a maximally\n    //      perfect two color-per character layout\n    AsciiArt.Image.terminalAspectRatioDistortion = 0.7;\n\n    return AsciiArt;\n}));\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/table.js":"(function (root, factory){\n    if(typeof define === 'function' && define.amd){\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    }else if (typeof module === 'object' && module.exports){\n        module.exports = factory();\n    }else{\n        // Browser globals (root is window)\n        root.AsciiArtImage = factory();\n    }\n}(this, function(){\n    var AsciiArt = {};\n    var parentArt;\n\n    function columnStatistics(columns, data){\n        var result = {};\n        columns.forEach(function(column){\n            var stats = {\n                total : 0,\n                count : 0\n            };\n            data.forEach(function(item){\n                var str = (item[column.value]||'')+'';\n                stats.count++;\n                stats.total += str.length;\n                if((!stats.max) || str.length > stats.max){\n                    stats.max = str.length;\n                }\n                if((!stats.min) || str.length < stats.min){\n                    stats.min = str.length;\n                }\n                stats.average = Math.floor(stats.total/stats.count);\n            })\n            result[column.value] = stats;\n        });\n        return result;\n    }\n\n    function columnSizes(width, stats, obj){\n        var sizes = [];\n        var keys = Object.keys(stats);\n        var remainingWidth = width - (keys.length+1);\n        var ob = obj;\n        keys.forEach(function(key, index){\n            var column = stats[key];\n            if(ob.headers[index].autosize){\n                sizes[index] = undefined;\n            }else{\n                sizes[index] = column.max;\n            }\n        });\n        var idealWidth = sizes.reduce(sum);\n        if(idealWidth > remainingWidth){\n            //try to convert column by column to average width until you've\n            // tried them all (go backwards (assuming order of importance))\n            (function(){\n                try{\n                    var sizeCache = sizes;\n                    for(var lcv = sizes.length-1; lcv >= 0; lcv--){\n                        sizes[lcv] = stats[ob.headers[lcv].value].average;\n                        var width = sizes.reduce(sum);\n                        if(width <= remainingWidth){\n                            var rem = remainingWidth - width;\n                            sizes[lcv] += rem;\n                            return;\n                        };\n                    }\n                    sizes = sizeCache;\n                    throw new Error();\n                }catch(err){\n                    for(var lcv = sizes.length-1; lcv >= 0; lcv--){\n                        sizes[lcv] = stats[ob.headers[lcv].value].min;\n                        var width = sizes.reduce(sum);\n                        if(width <= remainingWidth){\n                            var rem = remainingWidth - width;\n                            sizes[lcv] += rem;\n                            return;\n                        };\n                    }\n                }\n            })();\n        }\n        return sizes;\n    }\n\n    function sum(a, b){\n        return a + b;\n    }\n\n    var ansiAwareLength = function(value){\n        return parentArt.Ansi.length(value);\n    }\n\n    var ansiAwareTrimTo = function(value, length){\n        return parentArt.Ansi.trimTo(value, length);\n    }\n\n    var defaultChar = ' ';\n\n    function padRTo(text, width, padChar) {\n        padChar = padChar || defaultChar;\n        text = text + '';\n        return text.length >= width ?\n            text :\n            padR(text, width - text.length, padChar);\n    }\n\n    function padLTo(text, width, padChar) {\n        padChar = padChar || defaultChar;\n        text = text + '';\n        return text.length >= width ?\n            text :\n            padL(text, width - text.length, padChar);\n    }\n\n    function padR(text, amount, padChar) {\n        padChar = padChar || defaultChar;\n        text = text + '';\n        return text + new Array(amount + 1).join(padChar);\n    }\n\n    function padL(text, amount, padChar) {\n        padChar = padChar || defaultChar;\n        text = text + '';\n        return new Array(amount + 1).join(padChar) + text;\n    }\n\n    function bgFromStyle(style){\n        var matches = style && style.match(/([a-z_]+)_bg/g );\n        return backgroundColor = matches && matches\n        .map(function(name){\n            return name.substring(0, name.length-3);\n        })[0];\n    }\n\n    AsciiArt.Table = function(options){\n        this.options = options || {};\n        var ob = this;\n        if(this.options.bars){\n            if(this.options.bars === true) this.options.bars = 'single';\n            if(typeof this.options.bars == 'string') switch(this.options.bars){\n                case 'single':\n                    this.options.bars = {\n                        'ul_corner' : '┏',\n                        'ur_corner' : '┓',\n                        'lr_corner' : '┛',\n                        'll_corner' : '┗',\n                        'bottom_t' : '┻',\n                        'top_t' : '┳',\n                        'right_t' : '┫',\n                        'left_t' : '┣',\n                        'intersection' : '╋',\n                        'vertical' : '┃',\n                        'horizontal' : '━',\n                    };\n                    break;\n                case 'double':\n                    this.options.bars = {\n                        'ul_corner' : '╔',\n                        'ur_corner' : '╗',\n                        'lr_corner' : '╝',\n                        'll_corner' : '╚',\n                        'bottom_t' : '╩',\n                        'top_t' : '╦',\n                        'right_t' : '╣',\n                        'left_t' : '╠',\n                        'intersection' : '╬',\n                        'vertical' : '║',\n                        'horizontal' : '═',\n                    };\n                    break;\n                case 'block':\n                    this.options.bars = {\n                        'ul_corner' : '█',\n                        'ur_corner' : '█',\n                        'lr_corner' : '█',\n                        'll_corner' : '█',\n                        'bottom_t' : '█',\n                        'top_t' : '█',\n                        'right_t' : '█',\n                        'left_t' : '█',\n                        'intersection' : '█',\n                        'vertical' : '█',\n                        'horizontal' : '█',\n                    };\n                    break;\n                case 'angles':\n                    this.options.bars = {\n                        'ul_corner' : '◤',\n                        'ur_corner' : '◥',\n                        'lr_corner' : '◢',\n                        'll_corner' : '◣',\n                        'bottom_t' : '▲',\n                        'top_t' : '▼',\n                        'right_t' : '◀',\n                        'left_t' : '▶',\n                        'intersection' : '◆',\n                        'vertical' : ' ',\n                        'horizontal' : ' ',\n                    };\n                    break;\n            }\n            var bars = this.options.bars;\n            this.getBoundaryChar = function(t, l, b, r){\n                if(t && l && b && r) return bars.intersection;\n                //Ts\n                if(t && l && b) return bars.right_t;\n                if(t && l && r) return bars.bottom_t;\n                if(t && b && r) return bars.left_t;\n                if(l && b && r) return bars.top_t;\n\n                //Corners\n                if(l && b) return bars.ur_corner;\n                if(t && l) return bars.lr_corner;\n                if(t && r) return bars.ll_corner;\n                if(b && r) return bars.ul_corner;\n\n                //Straights\n                if(l && r) return bars.horizontal;\n                if(t && b) return bars.vertical;\n            }\n        }else{\n            if(!this.options.verticalBar) this.options.verticalBar = '|';\n            if(!this.options.horizontalBar) this.options.horizontalBar = '-';\n            if(!this.options.intersection) this.options.intersection = '+';\n            this.getBoundaryChar = function(t, l, b, r){\n                var isVert = (t || b);\n                var isHoriz = (l || r);\n                if(isVert && isHoriz){\n                    return ob.options.intersection;\n                }else{\n                    if(isVert) return ob.options.verticalBar;\n                    if(isHoriz) return ob.options.horizontalBar;\n                }\n            }\n        }\n        this.headers = [];\n        this.data = [];\n    };\n\n    AsciiArt.Table.prototype.write = function(width){\n        var stats = columnStatistics(this.headers, this.data);\n        var sizes = columnSizes(width, stats, this);\n        var ob = this;\n        //RENDER!!!\n        var result = '';\n        var y = true;\n        var n = false;\n        var fillerChar = '%';\n        var horizontalRule = function(styleHandler, top, bottom){\n            var rule = '';\n            var t = !top;\n            var b = !bottom;\n            ob.headers.forEach(function(header, index){\n                var f = index !== 0?true:false;\n                var c = ob.getBoundaryChar(t, f, b, y);\n                if(ob.options.borderColor) c = parentArt.style(\n                    c, ob.options.borderColor, false\n                );\n                var line = c + padRTo(\n                    '', sizes[index], ob.getBoundaryChar(n, y, n, y)\n                );\n                if(styleHandler){\n                    styleHandler(header, index, function(style){\n                        if(style){\n                            line = parentArt.style(line, style, true);\n                        }\n                    });\n                }\n                rule += line;\n            });\n            var chr = ob.getBoundaryChar(t, y, b, n);\n            if(ob.options.borderColor) chr = parentArt.style(\n                chr, ob.options.borderColor, true\n            );\n            var pos = ob.headers.length-1;\n            if(styleHandler){\n                styleHandler(ob.headers[pos], pos, function(style){\n                    var backgroundColor = bgFromStyle(style);\n                    if(style){\n                        var s = style;\n                        var c = chr;\n                        if(backgroundColor && !c.trim()){\n                            c = 'X';\n                            s = style+'+'+backgroundColor\n                        }\n                        rule += parentArt.style(c, s, true);\n                    }else{\n                        rule += chr;\n                    }\n                });\n            }else{\n                rule += chr;\n            }\n            rule += \"\\n\";\n            return rule;\n        }\n\n        var horizontalRuleStylerMaker = function(styleGetter){\n            return function(column, index, done){\n                var style = styleGetter(column, index);\n                var backgroundColor = bgFromStyle(style);\n                if(backgroundColor) done(backgroundColor+'_bg');\n                else done();\n            }\n        }\n        if(ob.options.drawRules !== false){\n            result += horizontalRule(horizontalRuleStylerMaker(function(header, i, row){\n                return (header && (\n                    header.headerStyle ||\n                    ob.options.headerStyle ||\n                    header.style\n                ));\n            }), true);\n        }\n        var lastBG;\n        var vb = ob.getBoundaryChar(y, n, y, n);\n        ob.headers.forEach(function(header, index){\n            var line = vb;\n            if(ob.options.borderColor) line = parentArt.style(\n                line, ob.options.borderColor, true\n            );\n            var value = header.label;\n            var backgroundColor;\n            var style = header.headerStyle ||\n                ob.options.headerStyle ||\n                header.style ||\n                ob.options.cellStyle;\n            if(style){\n                backgroundColor = bgFromStyle(style);\n                value = parentArt.style(value, style, true);\n                if(backgroundColor)\n                    line = parentArt.style(line, backgroundColor+'_bg', true);\n            }\n            var length = ansiAwareLength(value);\n            if(length > sizes[index]){\n                line += ansiAwareTrimTo(value, sizes[index]);\n            }else{\n                line += padR(\n                    value,\n                    sizes[index] - length,\n                    backgroundColor?parentArt.style(\n                        '.', style+'+'+backgroundColor, true\n                    ):' '\n                );\n            }\n            result += line;\n            lastBG = backgroundColor;\n        });\n        if(!lastBG){\n            if(ob.options.borderColor){\n                result += parentArt.style(\n                    vb, ob.options.borderColor, true\n                )+\"\\n\";;\n            }else{\n                result += vb+\"\\n\";\n            }\n        }else{\n            var c = vb;\n            if(ob.options.borderColor) c = parentArt.style(\n                c, ob.options.borderColor, true\n            );\n            result += parentArt.style(c, lastBG+'_bg', true)+\"\\n\";\n        }\n        if(ob.options.drawRules !== false){\n            result += horizontalRule(horizontalRuleStylerMaker(function(header, i, row){\n                return (header && (\n                    header.headerStyle ||\n                    ob.options.headerStyle ||\n                    header.style\n                ));\n            }));\n        }\n        ob.data.forEach(function(item){\n            ob.headers.forEach(function(header, index){\n                var style = header.style ||\n                    ob.options.dataStyle ||\n                    ob.options.cellStyle;\n                var line = vb;\n                if(ob.options.borderColor) line = parentArt.style(\n                    line, ob.options.borderColor, true\n                );\n                var value = item[header.value] || '';\n                var backgroundColor;\n                if(style){\n                    backgroundColor = bgFromStyle(style);\n                    value = parentArt.style(value, style, true);\n                    if(backgroundColor)\n                        line = parentArt.style(line, backgroundColor+'_bg', true);\n                }\n                var length = ansiAwareLength(value);\n                if(length > sizes[index]){\n                    line += ansiAwareTrimTo(value, sizes[index]);\n                }else{\n                    line += padR(\n                        value,\n                        sizes[index] - length,\n                        backgroundColor?parentArt.style(\n                            'X', style+'+'+backgroundColor, true\n                        ):' '\n                    );\n                }\n                result += line;\n            });\n            if(ob.options.borderColor){\n                result += parentArt.style(\n                    vb, ob.options.borderColor, true\n                )+\"\\n\";\n            }else{\n                result += vb+\"\\n\";\n            }\n        });\n        if(ob.options.drawRules !== false){\n            result += horizontalRule(horizontalRuleStylerMaker(function(header, i, row){\n                return (header && header.style);\n            }), false, true);\n        }\n        return result;\n    }\n\n    AsciiArt.Table.prototype.toString = function(){\n        return this.write(80);\n    }\n\n    AsciiArt.Table.prototype.setHeading = function(){\n        var headers = Array.prototype.slice.apply(arguments);\n        var ob = this;\n        headers.forEach(function(header){\n            ob.addColumn(header);\n        });\n    }\n\n    AsciiArt.Table.prototype.addRow = function(){\n        var values = Array.prototype.slice.apply(arguments);\n        var ob = this;\n        var row = {};\n        values.forEach(function(value, index){\n            row[ob.headers[index].value] = value;\n        });\n        this.add(row);\n    }\n\n    AsciiArt.Table.prototype.add = function(item){\n        this.data.push(item);\n    }\n\n    AsciiArt.Table.prototype.addColumn = function(options){\n        if(typeof options == 'string') options = {\n            value : options,\n            label : options,\n        };\n        if(options.value && !options.label) options.label = options.value;\n        this.headers.push(options);\n    }\n\n    AsciiArt.Table.setInstance = function(art){\n        parentArt = art;\n    }\n\n    return AsciiArt;\n}));\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/cold.js":"/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports  = {\n\t  compare       : __webpack_require__(1)\n\t  , method      : {\n\t      'EuclideanDistance' : __webpack_require__(15)\n\t    , 'CIE76Difference'   : __webpack_require__(17)\n\t  }\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return compare; })();\n\n\tvar HexRgb   = __webpack_require__(2).HexRgb,\n\t    methods = {\n\t        'EuclideanDistance' : __webpack_require__(15)\n\t      , 'CIE76Difference'   : __webpack_require__(17)\n\t    };\n\n\t/**\n\t * Compares two colors and returns difference from 1 to 100\n\t *\n\t * @param {String} color1\n\t * @param {String} color2\n\t * @param {String} method Default method is best from currently implemented\n\t * @return {Number} difference\n\t */\n\tfunction compare(color1, color2, method) {\n\t  var methodName = method || 'CIE76Difference';\n\n\t  if (undefined === methods[methodName]) {\n\t    throw new Error('Method \"' + methodName + '\" is unknown. See implemented methods in ./lib/method directory.');\n\t  }\n\n\t  /** @type Abstract */\n\t  var methodObj = new methods[methodName];\n\n\t  return methodObj.compare(new HexRgb(color1), new HexRgb(color2));\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {if (process.env.COLOR_MODEL_COVERAGE) {\n\t  eval('module.exports = require(\"./.coverage/lib\");');\n\t} else {\n\t  module.exports = __webpack_require__(4);\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\n\t(function () {\n\t    try {\n\t        cachedSetTimeout = setTimeout;\n\t    } catch (e) {\n\t        cachedSetTimeout = function () {\n\t            throw new Error('setTimeout is not defined');\n\t        }\n\t    }\n\t    try {\n\t        cachedClearTimeout = clearTimeout;\n\t    } catch (e) {\n\t        cachedClearTimeout = function () {\n\t            throw new Error('clearTimeout is not defined');\n\t        }\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        return setTimeout(fun, 0);\n\t    } else {\n\t        return cachedSetTimeout.call(null, fun, 0);\n\t    }\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        clearTimeout(marker);\n\t    } else {\n\t        cachedClearTimeout.call(null, marker);\n\t    }\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\n\tfunction noop() {}\n\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t    Component     : __webpack_require__(5)\n\t  , AbstractModel : __webpack_require__(6)\n\t  , Xyz           : __webpack_require__(7)\n\t  , Rgb           : __webpack_require__(8)\n\t  , HexRgb        : __webpack_require__(13)\n\t  , Lab           : __webpack_require__(14)\n\t  , Hsl           : __webpack_require__(9)\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function() { return Component; })();\n\n\t/**\n\t * Color model Component\n\t * @param {String} name\n\t * @param {Number} from\n\t * @param {Number} to\n\t */\n\tfunction Component(name, from, to) {\n\t  if (!name) {\n\t    throw new Error('Name not set');\n\t  }\n\t  this._name = name;\n\n\t  from = parseFloat(from);\n\t  to   = parseFloat(to);\n\t  if (!(from < to)) {\n\t    throw new Error('From must be less than to');\n\t  }\n\t  this._from = from;\n\t  this._to   = to;\n\n\t  this._value = null;\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Component}\n\t */\n\tComponent.prototype.set = function (value) {\n\t  value = value ? parseFloat(value) : 0;\n\t  if (isNaN(value)) {\n\t    throw new Error('Value for ' + this._name + ' must be numeric');\n\t  }\n\n\t  if (value < this._from || value > this._to) {\n\t    throw new Error('Value for ' + this._name + ' (' + value + ') must be between ' + this._from + ' and ' + this._to);\n\t  }\n\n\t  this._value = value;\n\t  return this;\n\t};\n\n\t/**\n\t * @returns {Number}\n\t */\n\tComponent.prototype.get = function () {\n\t  return this._value;\n\t};\n\n\t/**\n\t * @param {Component} that\n\t * @returns {Boolean}\n\t */\n\tComponent.prototype.equals = function (that) {\n\t  return (that instanceof Component)\n\t    && this._name  === that._name\n\t    && this._value === that._value;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return AbstractModel; })();\n\n\tvar _r = __webpack_require__(5); eval('var Component = _r');\n\n\t/**\n\t * Abstract color model\n\t */\n\tfunction AbstractModel() {\n\t  this._name       = null;\n\t  this._components = [];\n\t};\n\n\t/**\n\t * @returns {String}\n\t */\n\tAbstractModel.prototype.toString = function () {\n\t  var v = [];\n\t  for (var i = 0, iMax = this._components.length; i < iMax; i++) {\n\t    v.push(this['_' + this._components[i]].get());\n\t  }\n\t  return this._name + '(' + v.join(', ') + ')';\n\t};\n\n\t/**\n\t * @param {AbstractModel} that\n\t * @returns {Boolean}\n\t */\n\tAbstractModel.prototype.equals = function (that) {\n\t  if (!(that instanceof AbstractModel) || this._name !== that._name) {\n\t    return false;\n\t  }\n\t  for (var i = 0, cs = this._components, iMax = cs.length; i < iMax; i++) {\n\t    var key = '_' + cs[i];\n\t    if (!this[key].equals(that[key])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\t/**\n\t * @abstract\n\t * @returns {Xyz}\n\t */\n\tAbstractModel.prototype.toXyz = function () {\n\t  throw new Error('Model ' + this._name + ' has not implemented Xyz conversion!');\n\t};\n\n\t/**\n\t * @returns {Lab}\n\t */\n\tAbstractModel.prototype.toLab = function () {\n\t  return this.toXyz().toLab();\n\t};\n\n\t/**\n\t * Getter/chainable setter in one place\n\t *\n\t * @param {String} name\n\t * @param {Number} value\n\t * @returns {AbstractModel}\n\t */\n\tAbstractModel.prototype.component = function (name, value) {\n\t  var component = this['_' + name];\n\t  if (undefined === component || !(component instanceof Component)) {\n\t    throw new Error('Component \"' + name + '\" is not exists');\n\t  }\n\n\t  if (1 == arguments.length) {\n\t    return component.get();\n\t  }\n\n\t  component.set(value);\n\t  return this;\n\t};\n\n\t/**\n\t * @param {String} name\n\t * @param {Array} args\n\t * @returns {AbstractModel}\n\t */\n\tAbstractModel.prototype._component = function (name, args) {\n\t  /** @type Component */\n\t  var component = this['_' + name];\n\n\t  if (0 == args.length) {\n\t    return component.get();\n\t  }\n\n\t  component.set(args[0]);\n\t  return this;\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return Xyz; })();\n\n\tvar _r = __webpack_require__(5); eval('var Component = _r');\n\tvar _r = __webpack_require__(8);       eval('var Rgb       = _r');\n\tvar _r = __webpack_require__(14);       eval('var Lab       = _r');\n\n\t/**\n\t * XYZ color model - base color model for others\n\t *\n\t * CIE 1931 color space\n\t * @extends AbstractModel\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} z\n\t */\n\tfunction Xyz(x, y, z) {\n\t  this._name       = 'xyz';\n\t  this._components = ['x', 'y', 'z'];\n\t  this._x          = new Component('x', 0, 95.05); this._x.set(x);\n\t  this._y          = new Component('y', 0, 100  ); this._y.set(y);\n\t  this._z          = new Component('z', 0, 108.9); this._z.set(z);\n\t};\n\n\t__webpack_require__(10).inherits(Xyz, __webpack_require__(6)); 'code' ? 'completion' : Xyz.prototype = new AbstractModel;\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Xyz}\n\t */\n\tXyz.prototype.x = function (value) {\n\t  return this._component('x', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Xyz}\n\t */\n\tXyz.prototype.y = function (value) {\n\t  return this._component('y', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Xyz}\n\t */\n\tXyz.prototype.z = function (value) {\n\t  return this._component('z', arguments);\n\t};\n\n\t/**\n\t * @returns {Xyz}\n\t */\n\tXyz.prototype.toXyz = function () {\n\t  return new Xyz(this._x.get(), this._y.get(), this._z.get());\n\t};\n\n\t/**\n\t * @returns {Lab}\n\t */\n\tXyz.prototype.toLab = function () {\n\t  var x = this._preparePreLabValue(this._x.get() /  95.047),\n\t      y = this._preparePreLabValue(this._y.get() / 100.000),\n\t      z = this._preparePreLabValue(this._z.get() / 108.883);\n\n\t  return new Lab(\n\t    this._finalizeLabValue((116 * y) - 16),\n\t    this._finalizeLabValue(500 * (x - y)),\n\t    this._finalizeLabValue(200 * (y - z))\n\t  );\n\t};\n\n\t/**\n\t * @param {Number} preLabValue\n\t * @returns {Number}\n\t */\n\tXyz.prototype._preparePreLabValue = function (preLabValue) {\n\t  if (preLabValue > 0.008856) {\n\t    return Math.pow(preLabValue, 1/3);\n\t  }\n\t  return (7.787 * preLabValue) + (16 / 116);\n\t};\n\n\t/**\n\t * @param {Number} preLabValue\n\t * @returns {Number}\n\t */\n\tXyz.prototype._finalizeLabValue = function (preLabValue) {\n\t  return Math.round(preLabValue * 10000) / 10000;\n\t};\n\n\t/**\n\t * @returns {Rgb}\n\t */\n\tXyz.prototype.toRgb = function () {\n\t  var x = this._x.get() / 100,\n\t      y = this._y.get() / 100,\n\t      z = this._z.get() / 100,\n\t      r = x *  3.2406 + y * -1.5372 + z * -0.4986,\n\t      g = x * -0.9689 + y *  1.8758 + z *  0.0415,\n\t      b = x *  0.0557 + y * -0.2040 + z *  1.0570;\n\n\t  return new Rgb(this._finalizeRgbValue(r), this._finalizeRgbValue(g), this._finalizeRgbValue(b));\n\t};\n\n\t/**\n\t * @param {Number} preRgbValue\n\t * @returns {Number}\n\t */\n\tXyz.prototype._finalizeRgbValue = function (preRgbValue) {\n\t  if (preRgbValue > 0.0031308 ) {\n\t    preRgbValue = 1.055 * Math.pow(preRgbValue,  1/2.4) - 0.055;\n\t  } else {\n\t    preRgbValue = 12.92 * preRgbValue;\n\t  }\n\n\t  return Math.round(255 * preRgbValue);\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return Rgb; })();\n\n\tvar _r = __webpack_require__(5); eval('var Component = _r');\n\tvar _r = __webpack_require__(7);       eval('var Xyz       = _r');\n\tvar _r = __webpack_require__(9);       eval('var Hsl       = _r');\n\n\t/**\n\t * Rgb color model\n\t * @extends AbstractModel\n\t * @param {Number} r\n\t * @param {Number} g\n\t * @param {Number} b\n\t */\n\tfunction Rgb(r, g, b) {\n\t  this._name       = 'rgb';\n\t  this._components = ['red', 'green', 'blue'];\n\t  this._red        = new Component('red',   0, 255); this._red.set(r);\n\t  this._green      = new Component('green', 0, 255); this._green.set(g);\n\t  this._blue       = new Component('blue',  0, 255); this._blue.set(b);\n\t};\n\n\t__webpack_require__(10).inherits(Rgb, __webpack_require__(6)); 'code' ? 'completion' : Rgb.prototype = new AbstractModel;\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Rgb}\n\t */\n\tRgb.prototype.red = function (value) {\n\t  return this._component('red', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Rgb}\n\t */\n\tRgb.prototype.green = function (value) {\n\t  return this._component('green', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Rgb}\n\t */\n\tRgb.prototype.blue = function (value) {\n\t  return this._component('blue', arguments);\n\t};\n\n\t/**\n\t * @returns {HexRgb}\n\t */\n\tRgb.prototype.toHex = function () {\n\t  var HexRgb = __webpack_require__(13);\n\t  return new HexRgb()\n\t    .red  (this._red  .get())\n\t    .green(this._green.get())\n\t    .blue (this._blue .get());\n\t};\n\n\t/**\n\t * @returns {String}\n\t */\n\tRgb.prototype.toHexString = function () {\n\t  return this.toHex().toString();\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Number}\n\t */\n\tRgb.prototype._preparePreXyzValue = function(value) {\n\t  value = value / 255;\n\t  if (value > 0.04045) {\n\t    value = (value + 0.055) / 1.055;\n\t    value = Math.pow(value, 2.4);\n\t  } else {\n\t    value = value / 12.92;\n\t  }\n\t  return value * 100;\n\t};\n\n\t/**\n\t * @returns {Xyz}\n\t */\n\tRgb.prototype.toXyz = function () {\n\t  var r = this._preparePreXyzValue(this._red  .get()),\n\t      g = this._preparePreXyzValue(this._green.get()),\n\t      b = this._preparePreXyzValue(this._blue .get());\n\n\t  return new Xyz(\n\t    this._finalizeXyzValue(r * 0.4124 + g * 0.3576 + b * 0.1805),\n\t    this._finalizeXyzValue(r * 0.2126 + g * 0.7152 + b * 0.0722),\n\t    this._finalizeXyzValue(r * 0.0193 + g * 0.1192 + b * 0.9505)\n\t  );\n\t};\n\n\t/**\n\t * @param {Number} preXyzValue\n\t * @returns {Number}\n\t */\n\tRgb.prototype._finalizeXyzValue = function (preXyzValue) {\n\t  return Math.round(preXyzValue * 10000) / 10000;\n\t};\n\n\t/**\n\t * @returns {Hsl}\n\t */\n\tRgb.prototype.toHsl = function () {\n\t  var r = this._red  .get() / 255,\n\t      g = this._green.get() / 255,\n\t      b = this._blue .get() / 255,\n\t      min   = Math.min(r, g, b),\n\t      max   = Math.max(r, g, b),\n\t      delta = max - min,\n\t      lightness = (min + max) / 2;\n\n\t  lightness = Math.round(lightness * 100) / 100;\n\n\t  if (delta == 0) {\n\t    return new Hsl(0, 0, lightness);\n\t  }\n\n\t  var saturation = 0;\n\t  if (lightness < 0.5) {\n\t    saturation = delta / (max + min);\n\t  } else {\n\t    saturation = delta / (2 - max - min);\n\t  }\n\t  saturation = Math.round(saturation * 100) / 100;\n\n\t  var hue  = 0,\n\t    deltaR = (((max - r) / 6 ) + (delta / 2)) / delta,\n\t    deltaG = (((max - g) / 6 ) + (delta / 2)) / delta,\n\t    deltaB = (((max - b) / 6 ) + (delta / 2)) / delta;\n\n\t  if (r == max) {\n\t    hue = deltaB - deltaG;\n\t  } else if (g == max) {\n\t    hue = ( 1 / 3 ) + deltaR - deltaB;\n\t  } else {\n\t    hue = ( 2 / 3 ) + deltaG - deltaR;\n\t  }\n\n\t  if (hue < 0) {\n\t    ++hue;\n\t  } else if (hue > 1) {\n\t    --hue;\n\t  }\n\t  hue = (hue * 360.99999999999997) >> 0;\n\t  if (360 == hue) {\n\t    hue = 0;\n\t  }\n\n\t  return new Hsl(hue, saturation, lightness);\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return Hsl; })();\n\n\tvar _r = __webpack_require__(5); eval('var Component = _r');\n\tvar _r = __webpack_require__(8);       eval('var Rgb       = _r');\n\n\t/**\n\t * Hue, saturation, lightness color space\n\t * @extends AbstractModel\n\t * @param {Number} h\n\t * @param {Number} s\n\t * @param {Number} l\n\t */\n\tfunction Hsl(h, s, l) {\n\t  this._name       = 'hsl';\n\t  this._components = ['hue', 'saturation', 'lightness'];\n\t  this._hue        = new Component('hue',        0, 360); this._hue.set(h);\n\t  this._saturation = new Component('saturation', 0, 1  ); this._saturation.set(s);\n\t  this._lightness  = new Component('lightness',  0, 1  ); this._lightness.set(l);\n\t};\n\n\t__webpack_require__(10).inherits(Hsl, __webpack_require__(6)); 'code' ? 'completion' : Hsl.prototype = new AbstractModel;\n\n\t/**\n\t * @param {Number} value from 0 to 360\n\t * @returns {Hsl}\n\t */\n\tHsl.prototype.hue = function (value) {\n\t  return this._component('hue', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value from 0 to 1\n\t * @returns {Hsl}\n\t */\n\tHsl.prototype.saturation = function (value) {\n\t  return this._component('saturation', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value from 0 to 1\n\t * @returns {Hsl}\n\t */\n\tHsl.prototype.lightness = function (value) {\n\t  return this._component('lightness', arguments);\n\t};\n\n\t/**\n\t * @returns {Xyz}\n\t */\n\tHsl.prototype.toXyz = function () {\n\t  return this.toRgb().toXyz();\n\t};\n\n\t/**\n\t * @returns {Rgb}\n\t */\n\tHsl.prototype.toRgb = function () {\n\t  var lightness  = this._lightness.get(),\n\t      saturation = this._saturation.get();\n\t  if (saturation == 0) {\n\t    var light = 0;\n\t    if (lightness < 0) {\n\t      light = 0;\n\t    } else if (lightness >= 1) {\n\t      light = 255;\n\t    } else {\n\t      light = (lightness * (1 << 16)) >> 8;\n\t    }\n\t    return new Rgb(light, light, light);\n\t  }\n\n\t  var hue   = this._hue.get() / this._hue._to,\n\t      temp2 = (lightness < 0.5) ?\n\t                (lightness * (saturation + 1)) :\n\t                (lightness + saturation) - (lightness * saturation),\n\t      temp1 = 2 * lightness - temp2;\n\n\t  return new Rgb(\n\t    this._calcHue(temp1, temp2, hue + 1 / 3),\n\t    this._calcHue(temp1, temp2, hue),\n\t    this._calcHue(temp1, temp2, hue - 1 / 3)\n\t  );\n\t};\n\n\t/**\n\t * @param {Number} temp1\n\t * @param {Number} temp2\n\t * @param {Number} hue\n\t * @returns {Number}\n\t */\n\tHsl.prototype._calcHue = function (temp1, temp2, hue) {\n\t  if (hue < 0) {\n\t    ++hue;\n\t  } else if (hue > 1) {\n\t    --hue;\n\t  }\n\n\t  result = temp1;\n\t  if (hue * 6 < 1) {\n\t    result = temp1 + (temp2 - temp1) * hue * 6;\n\t  } else if (hue * 2 < 1) {\n\t    result = temp2;\n\t  } else if (hue * 3 < 2) {\n\t    result = temp1 + (temp2 - temp1) * (2/3 - hue) * 6;\n\t  }\n\n\t  return (result * 255.99999999999997) >> 0;\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\n\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\n\t  return deprecated;\n\t};\n\n\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\n\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\n\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\n\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\n\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\n\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\n\t  return hash;\n\t}\n\n\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\n\t  var base = '', array = false, braces = ['{', '}'];\n\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\n\t  ctx.seen.push(value);\n\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\n\t  ctx.seen.pop();\n\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\n\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\n\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\n\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\n\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\n\t  return name + ': ' + str;\n\t}\n\n\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\n\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\n\texports.isBuffer = __webpack_require__(11);\n\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\n\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\n\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\n\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\n\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(12);\n\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return HexRgb; })();\n\n\tvar _r = __webpack_require__(8); eval('var Rgb = _r');\n\n\t/**\n\t * Rgb color model, that created from HEX string and formatted as HEX\n\t * @extends Rgb\n\t * @param {String} hex\n\t */\n\tfunction HexRgb(hex) {\n\t  if (undefined === hex) {\n\t    return HexRgb.super_.apply(this, args);\n\t  }\n\n\t  var c  = '([a-f0-9]{1,2})',\n\t      re = new RegExp('^#?' + c + c + c + '$', 'i'),\n\t      m  = hex.match(re);\n\n\t  if (null === m) {\n\t    throw new Error('Value \"' + hex + '\" is unknown hex color');\n\t  }\n\n\t  var args = [\n\t    this._parseIntFromHex(m[1]),\n\t    this._parseIntFromHex(m[2]),\n\t    this._parseIntFromHex(m[3])\n\t  ];\n\t  HexRgb.super_.apply(this, args);\n\t};\n\n\t__webpack_require__(10).inherits(HexRgb, __webpack_require__(8)); 'code' ? 'completion' : HexRgb.prototype = new Rgb;\n\n\t/**\n\t * @param {String} hex\n\t * @returns {Number}\n\t */\n\tHexRgb.prototype._parseIntFromHex = function(hex) {\n\t  if (1 == hex.length) {\n\t    hex = hex + hex;\n\t  }\n\t  return parseInt(hex, 16);\n\t};\n\n\t/**\n\t * @returns {String}\n\t */\n\tHexRgb.prototype.toString = function() {\n\t  return '#' + this._formatIntAsHex(this.red()) + this._formatIntAsHex(this.green()) + this._formatIntAsHex(this.blue());\n\t};\n\n\t/**\n\t * @param {Number} intValue\n\t * @returns {String}\n\t */\n\tHexRgb.prototype._formatIntAsHex = function(intValue) {\n\t  intValue = Math.round(intValue);\n\t  strValue = '' + intValue;\n\t  if (1 == strValue.length) {\n\t    strValue = strValue + strValue;\n\t  }\n\t  return (intValue < 16 ? '0' : '') + intValue.toString(16);\n\t};\n\n\t/**\n\t * @returns {Rgb}\n\t */\n\tHexRgb.prototype.toRgb = function () {\n\t  return new Rgb(this._red.get(), this._green.get(), this._blue.get());\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return Lab; })();\n\n\tvar _r = __webpack_require__(5); eval('var Component = _r');\n\n\t/**\n\t * Lab color space\n\t *\n\t * CIE 1976 (L*, a*, b*) color space\n\t * @extends AbstractModel\n\t * @param {Number} l\n\t * @param {Number} a\n\t * @param {Number} b\n\t */\n\tfunction Lab(l, a, b) {\n\t  this._name       = 'lab';\n\t  this._components = ['lightness', 'a', 'b'];\n\t  this._lightness  = new Component('lightness',    0, 100); this._lightness.set(l);\n\t  this._a          = new Component('a',          -87, 100); this._a.set(a);\n\t  this._b          = new Component('b',         -108, 100); this._b.set(b);\n\t};\n\n\t__webpack_require__(10).inherits(Lab, __webpack_require__(6)); 'code' ? 'completion' : Lab.prototype = new AbstractModel;\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Lab}\n\t */\n\tLab.prototype.lightness = function (value) {\n\t  return this._component('lightness', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Lab}\n\t */\n\tLab.prototype.a = function (value) {\n\t  return this._component('a', arguments);\n\t};\n\n\t/**\n\t * @param {Number} value\n\t * @returns {Lab}\n\t */\n\tLab.prototype.b = function (value) {\n\t  return this._component('b', arguments);\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return EuclideanDistance; })();\n\n\t/**\n\t * @extends Abstract\n\t */\n\tfunction EuclideanDistance() {\n\t};\n\n\t__webpack_require__(10).inherits(EuclideanDistance, __webpack_require__(16)); 'code' ? 'completion' : EuclideanDistance.prototype = new Abstract;\n\n\t/**\n\t * @param {Rgb} color1\n\t * @param {Rgb} color2\n\t */\n\tEuclideanDistance.prototype.compare = function(color1, color2) {\n\t  if (color1.equals(color2)) {\n\t    return 0;\n\t  }\n\n\t  function squaredDelta(v1, v2) {\n\t    return Math.pow(v1 - v2, 2);\n\t  }\n\n\t  var sum = 0;\n\t  sum += squaredDelta(color1.red(),   color2.red());\n\t  sum += squaredDelta(color1.green(), color2.green());\n\t  sum += squaredDelta(color1.blue(),  color2.blue());\n\n\t  var conversionIndex = 19.5075;\n\n\t  return Math.sqrt(sum / conversionIndex);\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function() { return Abstract; })();\n\n\tfunction Abstract() {\n\t};\n\n\t/**\n\t * Compares two colors and returns difference from 1 to 100\n\t *\n\t * @param {Rgb} color1\n\t * @param {Rgb} color2\n\t * @return {Number} difference\n\t */\n\tAbstract.prototype.compare = function(color1, color2) {\n\t  throw new Error('Compare method unimplemented!');\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (function() { return CIE76Difference; })();\n\n\t/**\n\t * @extends Abstract\n\t */\n\tfunction CIE76Difference() {\n\t};\n\n\t__webpack_require__(10).inherits(CIE76Difference, __webpack_require__(16)); 'code' ? 'completion' : CIE76Difference.prototype = new Abstract;\n\n\t/**\n\t * @param {Rgb} color1\n\t * @param {Rgb} color2\n\t */\n\tCIE76Difference.prototype.compare = function(color1, color2) {\n\t  if (color1.equals(color2)) {\n\t    return 0;\n\t  }\n\n\t  function squaredDelta(v1, v2) {\n\t    return Math.pow(v1 - v2, 2);\n\t  }\n\n\t  var lab1 = color1.toLab(),\n\t      lab2 = color2.toLab(),\n\t      sum  = 0;\n\n\t  sum += squaredDelta(lab1.lightness(), lab2.lightness());\n\t  sum += squaredDelta(lab1.a(), lab2.a());\n\t  sum += squaredDelta(lab1.b(), lab2.b());\n\n\t  return Math.max(Math.min(Math.sqrt(sum), 100), 0)\n\t};\n\n\n/***/ }\n/******/ ]);","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/demo.js":"#!/usr/bin/env node\nvar art = require('./ascii-art');\n\n/*art.font('Demo!', 'Doom', function(rendered){\n    console.log(art.style(rendered, 'blue_bg+red+blink+inverse'));\n}); //*/\n/*\nart.image({\n    filepath :'/Volumes/Sparrows/Abbey/Professional/Project\\ Resources/Stock\\ photos/earth_in_space.jpg',\n    alphabet : 'ultra-wide'\n}).overlay(\n    '******'+\"\\n\"+\n    '******'+\"\\n\"+\n    '******'\n    ,{\n        x: 0,\n        y: 0,\n        style: 'red'\n    }, function(rendered){\n    console.log(rendered);\n}); //*/\n\nfunction colorInBonesShirt(rendered){\n    return rendered\n        .replace('|   ||                 |   |', '|&&&||&&&&&&&&&&&&&&&&&|&&&|')\n        .replace('|   ||                 |   |', '|&&&||&&&&&&&&&&&&&&&&&|&&&|')\n        .replace('|      (', '|&&&&&&(').replace('/   |', '/&&&|').replace('/   |', '/&&&|')\n        .replace('|  |', '|&&|').replace('| |', '|&|').replace('| |', '|&|')\n        .replace('-         \\\\', '-&&&&&&&&&\\\\').replace('_   ..   _', '_&&&..&&&_')\n        .replace('/      \\\\', '/&&&&&&\\\\').replace('/ ^  ^ \\\\', '/&^&&^&\\\\').replace('/                \\\\', '/&&&&&&&&&&&&&&&&\\\\')\n        .replace('| \\\\  @  @  / |', '|&\\\\&&@&&@&&/&|').replace('|  He\\'s dead, Jim! |', '|&&He\\'s&dead,&Jim!&|')\n        .replace(')   \\\\', ')&&&\\\\').replace('| ////// |', '|&//////&|').replace('_  _', '_&&_');\n}\n\n/*\nart.font('Ghost Wire BBS', 'Doom', function(logo){\n    art.font('No place like home', 'rusted', function(subtext){\n        art.table({\n            verticalBar : ' ',\n            horizontalBar : ' ',\n            intersection : ' ',\n            data:[\n                {name: art.style('current users', 'red'), value: '203'},\n                {name: 'operator', value: 'vince.vega'},\n                {name: 'dial-in', value: '(917)555-4202'},\n            ]\n        }).lines(2, function(table){\n            art.image({\n                filepath :'/Users/khrome/Desktop/vintage_starburst_texture_13_darkred_red_preview.jpg',\n                alphabet : 'ultra-wide'\n            }).lines(2, 30).overlay(logo, {\n                x: 0,\n                y: 0,\n                style: 'blue',\n            }).overlay(subtext, {\n                x: 19,\n                y: 8,\n                style: 'yellow',\n            }).overlay(table, {\n                x: -1,\n                y: -1,\n                style: 'green',\n            }, function(final){\n                console.log(final);\n            });\n        });\n    });\n}); //*/\n\n/*art.table({\n    data:[\n        {text: '    .\\'ANDRE.    '},\n        {text: '   ..THE.GIANT\\'.  '},\n        {text: '.With.Bobby.\"The.Brain\"'},\n        {text: '.Heenan.'}\n    ],\n    verticalBar : ' ',\n    horizontalBar : ' ',\n    intersection : ' '\n}).lines(2, function(table){\n    art.strings([\n        'ANDRE',\n        'the',\n        'GIANT',\n        'POSSE',\n        '7\\'4\"',\n        '520 LB'\n    ], 'rusted', function(andre, the, giant, posse, height, weight){\n        art.strings([ 'has', 'a'], 'twopoint', function(has, a){\n            art.image({\n                filepath :'/Users/khrome/Desktop/Unknown.jpeg',\n                alphabet : 'ultra-wide'\n            }).overlay(andre, {\n                x: 8, y: 4,\n                style: 'white'\n            }).overlay(the, {\n                x: 10, y: 7,\n                style: 'white',\n                transparent : true\n            }).overlay(giant, {\n                x: 8, y: 10,\n                style: 'white',\n                transparent : true\n            }).overlay(has, {\n                x: 10, y: 14,\n                style: 'white'\n            }).overlay(a, {\n                x: 13, y: 17,\n                style: 'white'\n            }).overlay(posse, {\n                x: 5, y: 20,\n                style: 'bright_black',\n                transparent: true\n            }).overlay(height, {\n                x: 59, y: 3,\n                style: 'bright_black',\n                transparent: true\n            }).overlay(weight, {\n                x: 59, y: 8,\n                style: 'bright_black',\n                transparent: true\n            }).overlay(table, {\n                x: 6, y: -6,\n                style: 'bright_black',\n                transparent: true\n            }, function(final){\n                console.log(final);\n            });\n        });\n    });\n});*/\n\n/*\nart.artwork({\n    artwork:'textfiles.com/art/st-char.asc'\n}).lines(31, 45, function(rendered){\n    //cleanup non-unix terminators\n    rendered = rendered.replace(/\\r/g, '');\n    rendered = colorInBonesShirt(rendered);\n    art.image({\n        filepath :'/Volumes/Sparrows/Abbey/Professional/Project\\ Resources/Stock\\ photos/earth_in_space.jpg',\n        alphabet : 'ultra-wide'\n    }).overlay(rendered, {\n        x: 0,\n        y: -1,\n        style: 'red+blink',\n        transparent: '&'\n    }, function(final){\n        console.log(final);\n    });\n}); //*/\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/generate.js":"var art = require('./ascii-art');\nvar difference = require('color-difference');\nvar arrays = require('async-arrays');\nvar fs = require('fs');\n\nfunction moreAccurateColor(r1, g1, b1, r2, g2, b2){\n\treturn difference.compare(\n\t\t'#'+r1.toString(16)+g1.toString(16)+b1.toString(16),\n\t\t'#'+r2.toString(16)+g2.toString(16)+b2.toString(16)\n\t);\n}\n\nart.Figlet.fontPath = './Fonts/';\n\nvar needsAccurateColor = [\n\t'./Images/sewer-grate.jpg',\n\t'./Images/max-headroom.jpg',\n\t'./Images/truth.png',\n\t'./Images/rene-cigler.jpg',\n\t'./Images/tony_harrison.jpg'\n];\nvar alternateAlphabets = {\n\t'./Images/gir.gif':'binary',\n\t'./Images/cernettes.jpg':'variant1',\n\t'./Images/gob.jpg':'variant2',\n\t'./Images/beyonce-upgrade.jpg':'variant3',\n\t'./Images/metropolis.jpg':'variant4',\n\t'./Images/grendel.jpg':'blocks',\n\t'./Images/zero-cool.jpg':'greyscale'\n};\nvar result = [];\nvar images = fs.readdirSync('./Images');\nimages = images.filter(function(image){\n\treturn image[0] !== '.';\n}).map(function(image){\n\treturn './Images/'+image;\n});\nvar count = 0;\narrays.forAllEmissions(images, function(item, key, done){\n\tvar options = { filepath: item };\n\tif(needsAccurateColor.indexOf(item) !== -1) options.distance = moreAccurateColor;\n\tif(alternateAlphabets[item]) options.alphabet = alternateAlphabets[item];\n\tvar image = new art.Image(options);\n\tvar file = options.filepath.split('/').pop();\n\tvar pos = file.indexOf('.');\n\tvar name = (pos===-1?file:file.substring(0, pos));\n\tvar label = name.replace(/[_-]+/g, ' ').split(' ').map(function(str){\n\t\treturn str[0].toUpperCase()+str.substring(1);\n\t}).join(\"        \");\n\tvar complete = done;\n\timage.write(function(err, ascii){\n\t\tif(err) console.log(err);\n\t\tresult[key] = ascii;\n\t\tart.font(label, 'Doom', 'white', function(rendered){\n\t\t\tresult[key] += rendered;\n\t\t\tif(process.argv[2] === 'save'){\n\t\t\t\tfs.writeFile('./test/images/'+name+'.nfo', ascii, function(err){\n\t\t\t\t\tcount++;\n\t\t\t\t\tcomplete();\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tcomplete();\n\t\t\t}\n\t\t});\n\t});\n}, function(){\n\tif(process.argv[2] !== 'save') console.log(result.join(\"\\n\"));\n\tart.image({\n\t\twidth : 40,\n\t\tfilepath : './Images/initech.png',\n\t\talphabet : 'wide'\n\t}).font('INITECH', 'Doom', 'cyan', function(rendered){\n\t\tif(process.argv[2] === 'save'){\n\t\t\tfs.writeFile('./test/images/mixed.nfo', rendered);\n\t\t\tcount++;\n\t\t}\n\t\tif(process.argv[2] === 'save') console.log(count+' files saved.');\n\t\telse console.log(rendered);\n\t});\n});","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/kaolin.js":"(function (root, factory) { // UMD - returnExports\n    if (typeof define === 'function' && define.amd) {\n        define(['./ascii-art'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        \n        module.exports = factory(require('./ascii-art'));\n        \n    } else {\n        root.chalk = factory(function(){\n            return root.AsciiArtImage;\n        }, root.fs);\n    }\n}(this, function(art) {\n    \n    var map = {\n        reset :  'reset',\n        bold : 'bold',\n        dim : 'dim',\n        italic : 'italic',\n        underline : 'underline',\n        inverse : 'inverse',\n        hidden : 'hidden',\n        strikethrough : 'strikethrough',\n        black : 'black',\n        red : 'red',\n        green : 'green',\n        yellow : 'yellow',\n        blue : 'blue',\n        magenta : 'magenta',\n        cyan : 'cyan',\n        white : 'white',\n        gray : 'gray',\n        grey : 'gray',\n        bgBlack : 'black_bg',\n        bgRed : 'red_bg',\n        bgGreen : 'green_bg',\n        bgYellow : 'yellow_bg',\n        bgBlue : 'blue_bg',\n        bgMagenta : 'magenta_bg',\n        bgCyan : 'cyan_bg',\n        bgWhite : 'white_bg'\n    }\n    \n    var colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white', 'gray', 'grey'];\n    \n    var envClose = {\n        bold : '22',\n        dim : '22',\n        italic : '23',\n        underline : '24',\n        blink : '25',\n        framed : '54',\n        encircled : '54',\n        strikethrough : '29',\n        overlined : '53',\n        black : '39',\n        red : '39',\n        green : '39',\n        yellow : '39',\n        blue : '39',\n        magenta : '39',\n        cyan : '39',\n        white : '39',\n        gray : '39',\n        grey : '39',\n        bright_black : '39',\n        bright_red : '39',\n        bright_green : '39',\n        bright_yellow : '39',\n        bright_blue : '39',\n        bright_magenta : '39',\n        bright_cyan : '39',\n        bright_white : '39',\n        bright_gray : '39',\n        bright_grey : '39',\n        black_bg : '49',\n        red_bg : '49',\n        green_bg : '49',\n        yellow_bg : '49',\n        blue_bg : '49',\n        magenta_bg : '49',\n        cyan_bg : '49',\n        white_bg : '49'\n    }\n    \n    var stack = [];\n    \n    function makeClosers(parts){\n        var closer = '';\n        parts.reverse().forEach(function(part){\n            if(envClose[part]) closer += '\\u001b['+envClose[part]+'m';\n        });\n        return closer;\n    }\n    \n    var defaultMarker = '\\u001b[39m';\n    \n    function context(parent, key){\n        var arr = parent?parent.slice(0):[];\n        var ctx = function(arg){\n            stack.push(key);\n            var text = arguments.length === 1?arg+'':Array.prototype.slice.apply(arguments, [0]).join(' ');\n            if(arr.length == 1 && arr.indexOf('reset') !== -1) return '\\u001b[0m'+text+'\\u001b[0m';\n            if(!text) return text;\n            // in a radical depature from convention, ascii-art only uses openers and resets\n            // the result is more uniform output (especially on graphics)\n            // we implement closers here for symmetry with chalk / colors.js\n            var result = art.style(text, arr.join('+'))+makeClosers(arr);\n            var parents = stack.slice(0);\n            var index;\n            while(result.indexOf(defaultMarker) !== -1 && parents.length && result.indexOf(defaultMarker) !== result.lastIndexOf(defaultMarker)){\n                var env = map[parents.pop()];\n                var marker = art.style('', env);\n                var index = result.indexOf(defaultMarker);\n                if(index !== -1){\n                    result = result.slice(0, index)+marker+result.slice(index+defaultMarker.length);\n                }\n            }\n            if(result.indexOf(\"\\n\") !== -1){\n                result = result.replace(\"\\n\", defaultMarker+\"\\n\"+'\\u001b[90m')\n            }\n            stack.pop(key);\n            return result;\n        };\n        Object.keys(map).forEach(function(key){\n            Object.defineProperty(ctx, key, {\n              get: function() {\n                  var sub = arr.slice(0);\n                  sub.push(map[key]);\n                  return new context(sub, key);\n              },\n              enumerable: true,\n              configurable: false\n            });\n        });\n        return ctx;\n    }\n    \n    return new context();\n}));","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/karma.conf.js":"// Karma configuration\n// Generated on Wed Oct 12 2016 14:47:17 GMT-0700 (PDT)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha', 'requirejs', 'should'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n      'test/karma/init.js',\n      {pattern: '*.js', included: false},\n      {pattern: 'renderers/*.js', included: false},\n      {pattern: 'test/test.js', included: false},\n      {pattern: 'test/images/*.nfo', included: false},\n      {pattern: 'Images/*.*', included: false},\n      {pattern: 'Fonts/*.flf', included: false},\n      {pattern: 'node_modules/browser-request/index.js', included:false},\n      {pattern: 'node_modules/dirname-shim/shim.js', included:false}\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 8082,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: false,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: [\n        //'PhantomJS',\n        //'Safari',\n        'Chrome',\n    ],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity\n  })\n}\n","/home/travis/build/npmtest/node-npmtest-ascii-art/node_modules/ascii-art/renderers/average.js":"(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.returnExports = factory();\n    }\n}(this, function () {\n    var AsciiArt;\n    var getValue = function(r, g, b){\n        return (r+g+b)/3;\n    }\n    var result = { //characters based on a value scale + averaging\n        setInstance: function(instance){\n            AsciiArt = instance;\n        },\n        render : function(image, utils, callback){\n            try{\n                var width = image.options.width;\n                var height = image.options.height;\n                var distortion = 0.5;\n                height = Math.floor(image.options.height*distortion);\n                var newImage = utils.imageFromCanvas(image.canvas);\n                var canvas = utils.canvas(width, height);\n\n                var context = canvas.getContext('2d');\n                context.drawImage(\n                    newImage, 0, 0,\n                    width, height\n                );\n                var data = context.getImageData(\n                    0, 0,\n                    width, height\n                ).data;\n                var result = '';\n                var currentColor;\n                for(var y=0; y < height; y++){\n                    for(var x=0; x < width; x++){\n                        var offset = y * width * 4 + x * 4;\n                        var color = AsciiArt.Image.getTerminalColor(\n                            data[offset],\n                            data[offset+1],\n                            data[offset+2],\n                            image.options\n                        );\n                        var fraction = getValue(\n                            data[offset],\n                            data[offset+1],\n                            data[offset+2]\n                        )/255;\n                        var charPosition = Math.floor(image.options.alphabet.length*fraction);\n                        result += AsciiArt.Ansi.Codes( (image.options.alphabet[charPosition] || ' '), color || 'off' , true);\n                        //result += (image.options.alphabet[charPosition] || ' ');\n                    }\n                    result += \"\\n\";\n                    currentColor = undefined;\n                }\n            }catch(ex){\n                if(callback) callback(ex);\n            }\n            if(callback) callback(undefined, result);\n        }\n    };\n    return result;\n}));\n"}